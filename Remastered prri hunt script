--== CONFIG & BACKEND ==--
local validKey = "Prri123" -- key valid saat ini
local targetPrefix = "afz"

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId
local targetName = "afz"
local cursor = ""
local bestServer = nil
local highestCount = 0
local tried = {}

local language = "en"
local texts = {
    en = {
        enterKey = "Enter Script Key",
        submit = "Submit Key",
        title = "PRRI HUNT SCRIPT",
        serverHopBtn = "Server Hop (Search for afz servers)",
        fling1Btn = "Fling Target (Method 1)",
        fling2Btn = "Fling Target (Method 2)",
        espToggleOn = "Toggle ESP aFz Players (ON)",
        espToggleOff = "Toggle ESP aFz Players (OFF)",
        close = "X",
        enterTarget = "Enter target name for Fling",
        createdBy = "Created by PRRI | coded by : dark sistem",
        keyCorrect = "Key correct! Opening GUI...",
        keyWrong = "Wrong key! Please try again.",
        searchingServer = "Searching server with name ",
        teleporting = "Teleporting...",
        foundPlayers = "Found %d 'aFz' players",
        noServer = "No suitable server found",
        flingSuccess = "Target %s flung!",
        flingNoTarget = "Please enter a target name!",
        playerNotFound = "Player not found!",
        espOnNotify = "ESP aFz enabled",
        espOffNotify = "ESP aFz disabled",
        fling2NoSofa = "Sofa not found in inventory!",
        fling2Success = "Sofa voided for target %s",
        languageSetEn = "Language set to English",
        languageSetId = "Bahasa diubah ke Indonesia"
    },
    id = {
        enterKey = "Masukkan Key Script",
        submit = "Submit Key",
        title = "PRRI HUNT SCRIPT",
        serverHopBtn = "Server Hop (Cari server afz)",
        fling1Btn = "Fling Target (Metode 1)",
        fling2Btn = "Fling Target (Metode 2)",
        espToggleOn = "Toggle ESP aFz Players (AKTIF)",
        espToggleOff = "Toggle ESP aFz Players (MATI)",
        close = "X",
        enterTarget = "Masukkan nama target untuk Fling",
        createdBy = "Dibuat oleh prri | coded by : dark sistem",
        keyCorrect = "Key benar! Membuka GUI...",
        keyWrong = "Key salah! Silahkan coba lagi.",
        searchingServer = "Mencari server dengan nama ",
        teleporting = "Teleporting...",
        foundPlayers = "Ditemukan %d pemain 'aFz'",
        noServer = "Tidak ada server cocok ditemukan",
        flingSuccess = "Target %s sudah di-fling!",
        flingNoTarget = "Masukkan nama target dulu!",
        playerNotFound = "Player tidak ditemukan!",
        espOnNotify = "ESP aFz diaktifkan",
        espOffNotify = "ESP aFz dimatikan",
        fling2NoSofa = "Sofa tidak ditemukan di inventory!",
        fling2Success = "Sofa di-void-kan untuk target %s",
        languageSetEn = "Language set to English",
        languageSetId = "Bahasa diubah ke Indonesia"
    }
}

local espEnabled = false
local espHighlights = {}

function Notify(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = 5
    })
end

function GetServers()
    local url = "https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?limit=100"
    if cursor ~= "" then url = url.."&cursor="..cursor end

    local response
    if request then
        response = request({Url = url})
    elseif syn and syn.request then
        response = syn.request({Url = url})
    else
        error("No HTTP request function found")
    end

    if not response.Success and response.Success ~= nil then
        return nil
    end

    local data = HttpService:JSONDecode(response.Body)
    cursor = data.nextPageCursor or ""
    return data.data or {}
end

function HasAFZ(players)
    local count = 0
    for _, user in ipairs(players) do
        local uname = string.lower(user.name or "")
        local dname = string.lower(user.displayName or "")
        if string.find(uname, targetName) or string.find(dname, targetName) then
            count = count + 1
        end
    end
    return count
end

function serverHop()
    Notify(texts[language].title, texts[language].searchingServer..targetName.."...")
    bestServer = nil
    highestCount = 0
    tried = {}
    cursor = ""

    for i = 1, 5 do
        local servers = GetServers()
        if servers then
            for _, srv in ipairs(servers) do
                if srv.playing < srv.maxPlayers and not tried[srv.id] then
                    tried[srv.id] = true
                    local count = HasAFZ(srv.players or {})
                    if count > highestCount then
                        bestServer = srv
                        highestCount = count
                    end
                end
            end
        end
        if cursor == "" then break end
    end

    if bestServer then
        Notify(texts[language].teleporting, string.format(texts[language].foundPlayers, highestCount))
        wait(2)
        TeleportService:TeleportToPlaceInstance(PlaceId, bestServer.id, LocalPlayer)
    else
        Notify(texts[language].title, texts[language].noServer)
    end
end

function flingTarget(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Notify(texts[language].title, texts[language].playerNotFound)
        return
    end

    local hrp = targetPlayer.Character.HumanoidRootPart
    local localHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localHRP then return end

    local rotations = 0
    local maxRotations = 20
    local angleStep = math.rad(36)

    local conn
    conn = RunService.Heartbeat:Connect(function()
        if rotations >= maxRotations then
            conn:Disconnect()
            hrp.CFrame = hrp.CFrame + Vector3.new(0, -500, 0)
            Notify(texts[language].title, string.format(texts[language].flingSuccess, targetPlayer.Name))
            return
        end

        localHRP.CFrame = CFrame.new(hrp.Position + Vector3.new(0, 5, 0)) * CFrame.Angles(0, rotations * angleStep, 0)
        rotations = rotations + 1
    end)
end

function fling2Brookhaven(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Notify(texts[language].title, texts[language].playerNotFound)
        return
    end

    local sofa = nil
    for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
        if string.lower(item.Name):find("sofa") then
            sofa = item
            break
        end
    end

    if not sofa then
        Notify(texts[language].title, texts[language].fling2NoSofa)
        return
    end

    local targetHRP = targetPlayer.Character.HumanoidRootPart
    local originalPos = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position or Vector3.new(0,0,0)

    sofa.Parent = workspace
    sofa:SetPrimaryPartCFrame(targetHRP.CFrame)
    wait(0.1)
    sofa:SetPrimaryPartCFrame(sofa.PrimaryPart.CFrame + Vector3.new(0, -500, 0))
    wait(0.1)

    sofa.Parent = LocalPlayer.Backpack
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(originalPos)
    end

    Notify(texts[language].title, string.format(texts[language].fling2Success, targetPlayer.Name))
end

function toggleESP()
    espEnabled = not espEnabled
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if string.lower(player.Name):find(targetName) or (player.DisplayName and string.lower(player.DisplayName):find(targetName)) then
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local highlight = Instance.new("Highlight")
                    highlight.Adornee = character
                    highlight.FillColor = Color3.new(1, 0, 0)
                    highlight.OutlineColor = Color3.new(1, 1, 1)
                    highlight.Parent = workspace
                    espHighlights[player] = highlight
                end
            end
        end
        Notify(texts[language].title, texts[language].espOnNotify)
    else
        for _, hl in pairs(espHighlights) do
            if hl and hl.Parent then
                hl:Destroy()
            end
        end
        espHighlights = {}
        Notify(texts[language].title, texts[language].espOffNotify)
    end
end

-- Set Language helper
local function setLanguage(lang)
    if texts[lang] then
        language = lang
        Notify(texts[language].title, texts[language]["languageSet"..string.upper(lang)])
    end
end

--== GUI CREATION ==--
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PRRIHuntScriptGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 400)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = ScreenGui
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Visible = false
mainFrame.ZIndex = 10
mainFrame.Name = "MainFrame"
mainFrame.AutoLocalize = false

local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0, 10)

-- Shadow effect with UIStroke and UIGradient on outer frame
local uiStroke = Instance.new("UIStroke", mainFrame)
uiStroke.Thickness = 3
uiStroke.Transparency = 0
uiStroke.Color = Color3.new(1, 0, 0)

-- Animate stroke color cycling rainbow
local hue = 0
RunService.Heartbeat:Connect(function(dt)
    hue = (hue + dt*0.2) % 1
    uiStroke.Color = Color3.fromHSV(hue, 1, 1)
end)

local titleLabel = Instance.new("TextLabel")
titleLabel.Text = texts[language].title
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, -40, 0, 40)
titleLabel.Position = UDim2.new(0, 20, 0, 20)
titleLabel.Parent = mainFrame

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 20)
closeBtn.BackgroundColor3 = Color3.fromRGB(150, 20, 20)
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 24
closeBtn.Text = texts[language].close
closeBtn.Parent = mainFrame
closeBtn.AutoButtonColor = true
closeBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
end)

-- Input for script key
local keyInput = Instance.new("TextBox")
keyInput.PlaceholderText = texts[language].enterKey
keyInput.ClearTextOnFocus = false
keyInput.Size = UDim2.new(1, -40, 0, 30)
keyInput.Position = UDim2.new(0, 20, 0, 70)
keyInput.BackgroundColor3 = Color3.fromRGB(30,30,30)
keyInput.TextColor3 = Color3.fromRGB(255,255,255)
keyInput.Font = Enum.Font.Gotham
keyInput.TextSize = 20
keyInput.Parent = mainFrame
local keyCorner = Instance.new("UICorner", keyInput)
keyCorner.CornerRadius = UDim.new(0, 6)

local submitBtn = Instance.new("TextButton")
submitBtn.Size = UDim2.new(1, -40, 0, 30)
submitBtn.Position = UDim2.new(0, 20, 0, 110)
submitBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
submitBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
submitBtn.Font = Enum.Font.GothamBold
submitBtn.TextSize = 22
submitBtn.Text = texts[language].submit
submitBtn.Parent = mainFrame
local submitCorner = Instance.new("UICorner", submitBtn)
submitCorner.CornerRadius = UDim.new(0, 6)

-- Target input label & box
local targetLabel = Instance.new("TextLabel")
targetLabel.Text = texts[language].enterTarget
targetLabel.Font = Enum.Font.Gotham
targetLabel.TextSize = 18
targetLabel.TextColor3 = Color3.fromRGB(220,220,220)
targetLabel.BackgroundTransparency = 1
targetLabel.Size = UDim2.new(1, -40, 0, 25)
targetLabel.Position = UDim2.new(0, 20, 0, 155)
targetLabel.Parent = mainFrame

local targetInput = Instance.new("TextBox")
targetInput.PlaceholderText = texts[language].enterTarget
targetInput.ClearTextOnFocus = false
targetInput.Size = UDim2.new(1, -40, 0, 30)
targetInput.Position = UDim2.new(0, 20, 0, 185)
targetInput.BackgroundColor3 = Color3.fromRGB(30,30,30)
targetInput.TextColor3 = Color3.fromRGB(255,255,255)
targetInput.Font = Enum.Font.Gotham
targetInput.TextSize = 20
targetInput.Parent = mainFrame
local targetCorner = Instance.new("UICorner", targetInput)
targetCorner.CornerRadius = UDim.new(0, 6)

-- Buttons container frame
local buttonsFrame = Instance.new("Frame")
buttonsFrame.Size = UDim2.new(1, -40, 0, 140)
buttonsFrame.Position = UDim2.new(0, 20, 0, 230)
buttonsFrame.BackgroundTransparency = 1
buttonsFrame.Parent = mainFrame

local btnNames = {"serverHopBtn", "fling1Btn", "fling2Btn", "espToggleOff"}
local buttons = {}

for i, keyBtnName in ipairs(btnNames) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, (i-1)*35)
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 20
    btn.Text = texts[language][keyBtnName]
    btn.Parent = buttonsFrame
    local c = Instance.new("UICorner", btn)
    c.CornerRadius = UDim.new(0, 6)
    buttons[keyBtnName] = btn
end

-- Helper to find player by name (case insensitive, partial match)
local function findPlayer(name)
    name = name:lower()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Name:lower():find(name) or (plr.DisplayName and plr.DisplayName:lower():find(name)) then
            return plr
        end
    end
    return nil
end

-- Event: submit key
submitBtn.MouseButton1Click:Connect(function()
    if keyInput.Text == validKey then
        Notify(texts[language].title, texts[language].keyCorrect)
        mainFrame.Visible = true
        keyInput.Text = ""
    else
        Notify(texts[language].title, texts[language].keyWrong)
    end
end)

-- Server Hop button
buttons.serverHopBtn.MouseButton1Click:Connect(function()
    spawn(serverHop)
end)

-- Fling1 button
buttons.fling1Btn.MouseButton1Click:Connect(function()
    local target = targetInput.Text
    if target == "" then
        Notify(texts[language].title, texts[language].flingNoTarget)
        return
    end
    local plr = findPlayer(target)
    if plr then
        flingTarget(plr)
    else
        Notify(texts[language].title, texts[language].playerNotFound)
    end
end)

-- Fling2 button
buttons.fling2Btn.MouseButton1Click:Connect(function()
    local target = targetInput.Text
    if target == "" then
        Notify(texts[language].title, texts[language].flingNoTarget)
        return
    end
    local plr = findPlayer(target)
    if plr then
        fling2Brookhaven(plr)
    else
        Notify(texts[language].title, texts[language].playerNotFound)
    end
end)

-- Toggle ESP button
local espOn = false
buttons.espToggleOff.MouseButton1Click:Connect(function()
    toggleESP()
    espOn = not espOn
    if espOn then
        buttons.espToggleOff.Text = texts[language].espToggleOn
    else
        buttons.espToggleOff.Text = texts[language].espToggleOff
    end
end)

-- Close button hides GUI, show key input again
closeBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
end)

-- Show key input frame initially (as a small frame)
local keyInputFrame = Instance.new("Frame")
keyInputFrame.Size = UDim2.new(0, 300, 0, 100)
keyInputFrame.Position = UDim2.new(0.5, -150, 0.5, -50)
keyInputFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
keyInputFrame.BackgroundTransparency = 0.05
keyInputFrame.BorderSizePixel = 0
keyInputFrame.Parent = ScreenGui
keyInputFrame.AnchorPoint = Vector2.new(0.5, 0.5)
local keyInputCorner = Instance.new("UICorner", keyInputFrame)
keyInputCorner.CornerRadius = UDim.new(0, 8)

local keyLabel = Instance.new("TextLabel")
keyLabel.Text = texts[language].enterKey
keyLabel.Size = UDim2.new(1, -20, 0, 30)
keyLabel.Position = UDim2.new(0, 10, 0, 10)
keyLabel.BackgroundTransparency = 1
keyLabel.Font = Enum.Font.Gotham
keyLabel.TextColor3 = Color3.fromRGB(230,230,230)
keyLabel.TextSize = 20
keyLabel.Parent = keyInputFrame

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(1, -20, 0, 30)
keyBox.Position = UDim2.new(0, 10, 0, 45)
keyBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
keyBox.TextColor3 = Color3.fromRGB(255,255,255)
keyBox.PlaceholderText = texts[language].enterKey
keyBox.Font = Enum.Font.Gotham
keyBox.TextSize = 20
keyBox.ClearTextOnFocus = false
keyBox.Parent = keyInputFrame
local keyBoxCorner = Instance.new("UICorner", keyBox)
keyBoxCorner.CornerRadius = UDim.new(0, 6)

local keySubmitBtn = Instance.new("TextButton")
keySubmitBtn.Size = UDim2.new(1, -20, 0, 30)
keySubmitBtn.Position = UDim2.new(0, 10, 0, 80)
keySubmitBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
keySubmitBtn.TextColor3 = Color3.fromRGB(255, 255, 255
keySubmitBtn.Font = Enum.Font.GothamBold
keySubmitBtn.TextSize = 22
keySubmitBtn.Text = texts[language].submit
keySubmitBtn.Parent = keyInputFrame
local keySubmitCorner = Instance.new("UICorner", keySubmitBtn)
keySubmitCorner.CornerRadius = UDim.new(0, 6)

keySubmitBtn.MouseButton1Click:Connect(function()
    if keyBox.Text == validKey then
        Notify(texts[language].title, texts[language].keyCorrect)
        mainFrame.Visible = true
        keyInputFrame.Visible = false
        keyBox.Text = ""
    else
        Notify(texts[language].title, texts[language].keyWrong)
    end
end)

-- Support Enter key press for submit
keyBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        keySubmitBtn.MouseButton1Click:Wait()
    end
end)

-- Make main GUI draggable
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Show key input frame initially
mainFrame.Visible = false
keyInputFrame.Visible = true
